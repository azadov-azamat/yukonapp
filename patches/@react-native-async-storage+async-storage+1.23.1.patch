diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/java/com/reactnativecommunity/asyncstorage/NativeAsyncStorageModuleSpec.java b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/java/com/reactnativecommunity/asyncstorage/NativeAsyncStorageModuleSpec.java
new file mode 100644
index 0000000..e604b9e
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/java/com/reactnativecommunity/asyncstorage/NativeAsyncStorageModuleSpec.java
@@ -0,0 +1,59 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.reactnativecommunity.asyncstorage;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Callback;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+
+public abstract class NativeAsyncStorageModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNCAsyncStorage";
+
+  public NativeAsyncStorageModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void multiGet(ReadableArray keys, Callback callback);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void multiSet(ReadableArray kvPairs, Callback callback);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void multiRemove(ReadableArray keys, Callback callback);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void multiMerge(ReadableArray kvPairs, Callback callback);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getAllKeys(Callback callback);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void clear(Callback callback);
+}
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..e30e772
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rnasyncstorage/*.cpp)
+
+add_library(
+  react_codegen_rnasyncstorage
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rnasyncstorage PUBLIC . react/renderer/components/rnasyncstorage)
+
+target_link_libraries(
+  react_codegen_rnasyncstorage
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_rnasyncstorage
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ComponentDescriptors.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ComponentDescriptors.cpp
new file mode 100644
index 0000000..87fa801
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ComponentDescriptors.cpp
@@ -0,0 +1,22 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rnasyncstorage/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rnasyncstorage_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+
+}
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ComponentDescriptors.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ComponentDescriptors.h
new file mode 100644
index 0000000..877215a
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ComponentDescriptors.h
@@ -0,0 +1,24 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnasyncstorage/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+
+
+void rnasyncstorage_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/EventEmitters.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/EventEmitters.cpp
new file mode 100644
index 0000000..cd2bb69
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/EventEmitters.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rnasyncstorage/EventEmitters.h>
+
+
+namespace facebook::react {
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/EventEmitters.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/EventEmitters.h
new file mode 100644
index 0000000..2845a63
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/EventEmitters.h
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/Props.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/Props.cpp
new file mode 100644
index 0000000..126a406
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/Props.cpp
@@ -0,0 +1,19 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rnasyncstorage/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/Props.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/Props.h
new file mode 100644
index 0000000..870864b
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/Props.h
@@ -0,0 +1,18 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ShadowNodes.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ShadowNodes.cpp
new file mode 100644
index 0000000..9870d4d
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ShadowNodes.cpp
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rnasyncstorage/ShadowNodes.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ShadowNodes.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ShadowNodes.h
new file mode 100644
index 0000000..ba0deaf
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/ShadowNodes.h
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnasyncstorage/EventEmitters.h>
+#include <react/renderer/components/rnasyncstorage/Props.h>
+#include <react/renderer/components/rnasyncstorage/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/States.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/States.cpp
new file mode 100644
index 0000000..d6bd1c7
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rnasyncstorage/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/States.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/States.h
new file mode 100644
index 0000000..c011ed8
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/States.h
@@ -0,0 +1,19 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/rnasyncstorageJSI-generated.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/rnasyncstorageJSI-generated.cpp
new file mode 100644
index 0000000..d0121f4
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/rnasyncstorageJSI-generated.cpp
@@ -0,0 +1,72 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rnasyncstorageJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiGet(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeAsyncStorageModuleCxxSpecJSI *>(&turboModule)->multiGet(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asFunction(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiSet(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeAsyncStorageModuleCxxSpecJSI *>(&turboModule)->multiSet(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asFunction(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiRemove(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeAsyncStorageModuleCxxSpecJSI *>(&turboModule)->multiRemove(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asFunction(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiMerge(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeAsyncStorageModuleCxxSpecJSI *>(&turboModule)->multiMerge(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asFunction(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_getAllKeys(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeAsyncStorageModuleCxxSpecJSI *>(&turboModule)->getAllKeys(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_clear(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeAsyncStorageModuleCxxSpecJSI *>(&turboModule)->clear(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
+  );
+  return jsi::Value::undefined();
+}
+
+NativeAsyncStorageModuleCxxSpecJSI::NativeAsyncStorageModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNCAsyncStorage", jsInvoker) {
+  methodMap_["multiGet"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiGet};
+  methodMap_["multiSet"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiSet};
+  methodMap_["multiRemove"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiRemove};
+  methodMap_["multiMerge"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_multiMerge};
+  methodMap_["getAllKeys"] = MethodMetadata {1, __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_getAllKeys};
+  methodMap_["clear"] = MethodMetadata {1, __hostFunction_NativeAsyncStorageModuleCxxSpecJSI_clear};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/rnasyncstorageJSI.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/rnasyncstorageJSI.h
new file mode 100644
index 0000000..4c829e0
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/react/renderer/components/rnasyncstorage/rnasyncstorageJSI.h
@@ -0,0 +1,112 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  class JSI_EXPORT NativeAsyncStorageModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeAsyncStorageModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual void multiGet(jsi::Runtime &rt, jsi::Array keys, jsi::Function callback) = 0;
+  virtual void multiSet(jsi::Runtime &rt, jsi::Array kvPairs, jsi::Function callback) = 0;
+  virtual void multiRemove(jsi::Runtime &rt, jsi::Array keys, jsi::Function callback) = 0;
+  virtual void multiMerge(jsi::Runtime &rt, jsi::Array kvPairs, jsi::Function callback) = 0;
+  virtual void getAllKeys(jsi::Runtime &rt, jsi::Function callback) = 0;
+  virtual void clear(jsi::Runtime &rt, jsi::Function callback) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeAsyncStorageModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value get(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.get(rt, propName);
+  }
+
+  static constexpr std::string_view kModuleName = "RNCAsyncStorage";
+
+protected:
+  NativeAsyncStorageModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeAsyncStorageModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeAsyncStorageModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeAsyncStorageModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    void multiGet(jsi::Runtime &rt, jsi::Array keys, jsi::Function callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::multiGet) == 3,
+          "Expected multiGet(...) to have 3 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::multiGet, jsInvoker_, instance_, std::move(keys), std::move(callback));
+    }
+    void multiSet(jsi::Runtime &rt, jsi::Array kvPairs, jsi::Function callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::multiSet) == 3,
+          "Expected multiSet(...) to have 3 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::multiSet, jsInvoker_, instance_, std::move(kvPairs), std::move(callback));
+    }
+    void multiRemove(jsi::Runtime &rt, jsi::Array keys, jsi::Function callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::multiRemove) == 3,
+          "Expected multiRemove(...) to have 3 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::multiRemove, jsInvoker_, instance_, std::move(keys), std::move(callback));
+    }
+    void multiMerge(jsi::Runtime &rt, jsi::Array kvPairs, jsi::Function callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::multiMerge) == 3,
+          "Expected multiMerge(...) to have 3 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::multiMerge, jsInvoker_, instance_, std::move(kvPairs), std::move(callback));
+    }
+    void getAllKeys(jsi::Runtime &rt, jsi::Function callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::getAllKeys) == 2,
+          "Expected getAllKeys(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::getAllKeys, jsInvoker_, instance_, std::move(callback));
+    }
+    void clear(jsi::Runtime &rt, jsi::Function callback) override {
+      static_assert(
+          bridging::getParameterCount(&T::clear) == 2,
+          "Expected clear(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::clear, jsInvoker_, instance_, std::move(callback));
+    }
+
+  private:
+    friend class NativeAsyncStorageModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/rnasyncstorage-generated.cpp b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/rnasyncstorage-generated.cpp
new file mode 100644
index 0000000..3b8abfb
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/rnasyncstorage-generated.cpp
@@ -0,0 +1,62 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rnasyncstorage.h"
+
+namespace facebook::react {
+
+static facebook::jsi::Value __hostFunction_NativeAsyncStorageModuleSpecJSI_multiGet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "multiGet", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeAsyncStorageModuleSpecJSI_multiSet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "multiSet", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeAsyncStorageModuleSpecJSI_multiRemove(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "multiRemove", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeAsyncStorageModuleSpecJSI_multiMerge(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "multiMerge", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeAsyncStorageModuleSpecJSI_getAllKeys(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getAllKeys", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeAsyncStorageModuleSpecJSI_clear(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "clear", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
+}
+
+NativeAsyncStorageModuleSpecJSI::NativeAsyncStorageModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["multiGet"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleSpecJSI_multiGet};
+  methodMap_["multiSet"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleSpecJSI_multiSet};
+  methodMap_["multiRemove"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleSpecJSI_multiRemove};
+  methodMap_["multiMerge"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageModuleSpecJSI_multiMerge};
+  methodMap_["getAllKeys"] = MethodMetadata {1, __hostFunction_NativeAsyncStorageModuleSpecJSI_getAllKeys};
+  methodMap_["clear"] = MethodMetadata {1, __hostFunction_NativeAsyncStorageModuleSpecJSI_clear};
+}
+
+std::shared_ptr<TurboModule> rnasyncstorage_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNCAsyncStorage") {
+    return std::make_shared<NativeAsyncStorageModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/rnasyncstorage.h b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/rnasyncstorage.h
new file mode 100644
index 0000000..a74d671
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/rnasyncstorage.h
@@ -0,0 +1,31 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeAsyncStorageModule'
+ */
+class JSI_EXPORT NativeAsyncStorageModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeAsyncStorageModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rnasyncstorage_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/schema.json b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..cf51d63
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/schema.json
@@ -0,0 +1,279 @@
+{
+  "modules": {
+    "NativeAsyncStorageModule": {
+      "type": "NativeModule",
+      "aliasMap": {},
+      "enumMap": {},
+      "spec": {
+        "eventEmitters": [],
+        "methods": [
+          {
+            "name": "multiGet",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "keys",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "ArrayTypeAnnotation",
+                    "elementType": {
+                      "type": "StringTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "callback",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "error",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      },
+                      {
+                        "name": "result",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "multiSet",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "kvPairs",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "ArrayTypeAnnotation",
+                    "elementType": {
+                      "type": "AnyTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "callback",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "error",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "multiRemove",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "keys",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "ArrayTypeAnnotation",
+                    "elementType": {
+                      "type": "StringTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "callback",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "error",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "multiMerge",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "kvPairs",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "ArrayTypeAnnotation",
+                    "elementType": {
+                      "type": "AnyTypeAnnotation"
+                    }
+                  }
+                },
+                {
+                  "name": "callback",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "error",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "getAllKeys",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "callback",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "error",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      },
+                      {
+                        "name": "result",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          },
+          {
+            "name": "clear",
+            "optional": false,
+            "typeAnnotation": {
+              "type": "FunctionTypeAnnotation",
+              "returnTypeAnnotation": {
+                "type": "VoidTypeAnnotation"
+              },
+              "params": [
+                {
+                  "name": "callback",
+                  "optional": false,
+                  "typeAnnotation": {
+                    "type": "FunctionTypeAnnotation",
+                    "returnTypeAnnotation": {
+                      "type": "VoidTypeAnnotation"
+                    },
+                    "params": [
+                      {
+                        "name": "error",
+                        "optional": true,
+                        "typeAnnotation": {
+                          "type": "ArrayTypeAnnotation",
+                          "elementType": {
+                            "type": "AnyTypeAnnotation"
+                          }
+                        }
+                      }
+                    ]
+                  }
+                }
+              ]
+            }
+          }
+        ]
+      },
+      "moduleName": "RNCAsyncStorage"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..5f27917
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.reactnativecommunity.asyncstorage" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
new file mode 100644
index 0000000..5b1382f
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.reactnativecommunity.asyncstorage",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..fa6ce01
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Tue Mar 11 18:24:30 UZT 2025
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..95e396b
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/build/generated/res/resValues/debug"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..45fde78
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.reactnativecommunity.asyncstorage" >
+4
+5    <uses-sdk android:minSdkVersion="24" />
+6
+7</manifest>
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
new file mode 100644
index 0000000..5f27917
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.reactnativecommunity.asyncstorage" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
new file mode 100644
index 0000000..08f4ebe
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
@@ -0,0 +1 @@
+0 Warning/Error
\ No newline at end of file
diff --git a/node_modules/@react-native-async-storage/async-storage/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/@react-native-async-storage/async-storage/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..444e524
--- /dev/null
+++ b/node_modules/@react-native-async-storage/async-storage/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,17 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml:2:1-5:12
+INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml:2:1-5:12
+	package
+		ADDED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml:3:11-58
+		INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml:2:11-69
+uses-sdk
+INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
+INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/izzat/repos/yukonuz-mobile/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
diff --git a/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml b/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
index 7e180bd..e07461c 100644
--- a/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
+++ b/node_modules/@react-native-async-storage/async-storage/android/src/main/AndroidManifest.xml
@@ -1,6 +1,5 @@
 
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.reactnativecommunity.asyncstorage">
+<manifest xmlns:android="http://schemas.android.com/apk/res/android">
 
 </manifest>
   
